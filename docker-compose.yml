version: '3.4'

services:
  # Database Service
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: meetingappdemo-sql_server2022
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourSuperSecretPassword@123

  # Frontend Service
  frontend:
    image: meetingapp-client:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - api

  # API Service
  api:
    image: meetingapp-api:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: ["bash", "-c", "/app/scripts/wait-for-it.sh meetingappdemo-sql_server2022:1433 -- /app/migrations_bundle && dotnet AlpataTech.MeetingAppDemo.API.dll"]
    environment:
      # ASP.NET Core Environment Configuration
      - ASPNETCORE_ENVIRONMENT=Development # Development or Production, swagger is enabled in dev env
      - ASPNETCORE_URLS=http://+:80
      
      # Database Connection Strings for Production and Development
      - DB_CONNECTION_STRING_PROD=Server=meetingappdemo-sql_server2022;Database=AlpataTechMeetingApp;User Id=sa;Password=YourSuperSecretPassword@123;trustservercertificate=true;
      - DB_CONNECTION_STRING_DEV=Server=meetingappdemo-sql_server2022;Database=TestNewDb;User Id=sa;Password=YourSuperSecretPassword@123;trustservercertificate=true;
      
      # SMTP Credentials (Using ethereal.email you can get your own credientials there)
      - SMTP_SERVER=smtp.ethereal.email
      - SMPT_PORT=587
      - SMTP_USERNAME=eusebio.kautzer27@ethereal.email
      - SMTP_PASSWORD=QDZ2AWJPM3w3PRKXHW
      
      # JWT Configuration
      - JWT_AUDIENCE=YourJWTAudience
      - JWT_ISSUER=YourJWTIssuer
      - JWT_SECRET=YourAtLeast128bitJWTSecret

    ports:
      - "5000:80"
    depends_on:
      - database
